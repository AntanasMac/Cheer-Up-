@use 'sass:math';

$n: 8;

.gallery {
    display: grid;
    width: 400px;
    transform-style: preserve-3d;
    --_t: perspective(170px) rotateX(-90deg);
    animation: r 60s cubic-bezier(0.5, -0.2, .5, 1.2) infinite;
}

@keyframes r {

    0%,
    3% {
        transform: var(--_t) rotate(0deg)
    }

    @for $i from 1 to $n {

        #{($i/$n)*100 - 2}%,
        #{($i/$n)*100 + 3}% {
            transform: var(--_t) rotate(#{($i/$n)*-360}deg)
        }
    }

    97%,
    100% {
        transform: var(--_t) rotate(-360deg)
    }
}

.gallery>img {
    grid-area: 1/2;
    width: 101%;
    height: 101%;
    aspect-ratio: 3;
    object-fit: contain;
}

@for $i from 1 to ($n + 1) {
    .gallery>img:nth-child(#{$i}) {
        transform: rotate(#{360*($i - 1)/$n}deg) translateY(50%/math.tan(229deg/$n)) rotateX(90deg);
    }

    body {
        margin: 0;
        min-height: 100vh;
        display: grid;
        place-content: center;
        overflow: hidden;

    }
}

//fire

$fireColor: rgba(255, 81, 0, 0.137);
$fireColorT: rgba(255, 81, 0, 0);
$dur: 0.4s;
$blur: 0.02em;
$fireRad: 50em;
$parts: 150;
$partSize: 5em;

.fire {
    font-size: 24px;
    filter: blur($blur);
    -webkit-filter: blur($blur);
    margin: 6em auto 0 auto;
    position: relative;
    width: 10em;
    height: 24em;
}

.particle {
    animation: rise $dur ease-in infinite;
    background-image: radial-gradient($fireColor 20%, $fireColorT 70%);
    border-radius: 50%;
    mix-blend-mode: screen;
    opacity: 0;
    position: absolute;
    bottom: 0;
    width: $partSize;
    height: $partSize;

    // spread particles out in time and x-position to get desired effect
    @for $p from 1 through $parts {
        &:nth-of-type(#{$p}) {
            animation-delay: $dur * random();
            left: calc((200% - #{$partSize}) * #{($p - 1)/$parts});
        }
    }
}

@keyframes rise {
    from {
        opacity: 0;
        transform: translateY(0) scale(1);
    }

    25% {
        opacity: 1;
    }

    to {
        opacity: 0;
        transform: translateY(-20em) scale(0);
    }
}